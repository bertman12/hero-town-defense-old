//===========================================================================
// 
// Defend the Castle
// 
//   Warcraft III map script
//   Generated by the Warcraft III World Editor
//   Map Author: JediMindTrix
// 
//===========================================================================

//***************************************************************************
//*
//*  Global Variables
//*
//***************************************************************************

globals
    // User-defined
    force                   udg_Players                = null
    group                   udg_enemy_spawn_group      = null
    integer                 udg_wave_counter           = 0
    unit                    udg_tower_in_range         = null
    integer                 udg_child_wave_counter     = 0
    integer array           udg_special_enemy_type_array
    integer array           udg_basic_enemy_type_array
    timer                   udg_game_start_timer       = null
    timerdialog             udg_game_start_timer_window = null
    integer                 udg_target_pos_x           = 0
    integer                 udg_target_pos_y           = 0
    unit                    udg_target_unit            = null
    integer                 udg_explosion_count        = 0
    integer                 udg_caster_angle_deg       = 0
    integer                 udg_explosion_pos_x        = 0
    integer                 udg_explosion_pos_y        = 0
    integer                 udg_explosion_iterator     = 0
    integer                 udg_expansion_distance     = 0
    integer                 udg_explosion_radius       = 0
    integer                 udg_explosion_damage       = 0
    unit                    udg_rolling_thunder_bolt_caster = null
    integer                 udg_success_number         = 0
    integer                 udg_random_number          = 0
    timer                   udg_intermission_timer     = null
    timerdialog             udg_intermission_timer_window = null
    integer                 udg_preparation_time       = 0
    integer                 udg_child_wave_interval_time = 0
    sound                   udg_explosion_sound        = null
    effect                  udg_explosion_effect       = null
    unit                    udg_nightmare_target       = null
    unit                    udg_converted_unit         = null
    unit                    udg_nightmare_caster       = null
    ability                 udg_convert_ability        = null
    integer                 udg_gold_cost              = 0
    integer                 udg_lumber_cost            = 0
    integer                 udg_final_child_wave       = 0
    integer                 udg_wave_earned_gold_bonus = 0
    timer                   udg_wave_timer             = null
    group                   udg_explosion_damaged_units = null
    integer                 udg_wave_max_gold_bonus    = 0
    integer                 udg_Untitled_Variable_001  = 0
    integer                 udg_basic_enemy_type_incrementor = 0
    integer                 udg_special_enemy_type_incrementor = 0

    // Generated
    rect                    gg_rct_Player_Spawn        = null
    rect                    gg_rct_Enemy_Spawn         = null
    rect                    gg_rct_Enemy_Wave_Target   = null
    rect                    gg_rct_Tower_Of_Restoration_Check = null
    rect                    gg_rct_Enemy_Acolyte_Spawn = null
    sound                   gg_snd_QuestNew            = null
    sound                   gg_snd_Warning             = null
    sound                   gg_snd_TheHornOfCenarius   = null
    string                  gg_snd_IllidansTheme
    sound                   gg_snd_Rescue              = null
    sound                   gg_snd_ClanInvitation      = null
    sound                   gg_snd_ArrangedTeamInvitation = null
    trigger                 gg_trg_Victory_Animation   = null
    trigger                 gg_trg_TODO                = null
    trigger                 gg_trg_On_Shrine_of_Power_Event = null
    trigger                 gg_trg_Enable_Shrine_of_Power = null
    trigger                 gg_trg_On_Immolation       = null
    trigger                 gg_trg_On_Salvage          = null
    trigger                 gg_trg_Set_Unit_Position   = null
    trigger                 gg_trg_On_Nightmare        = null
    trigger                 gg_trg_Swap_Nightmare      = null
    trigger                 gg_trg_On_Convert          = null
    trigger                 gg_trg_Create_Grass        = null
    trigger                 gg_trg_Charged_Blink_Event = null
    trigger                 gg_trg_Metamorphosis_Triggered = null
    trigger                 gg_trg_On_Rolling_Thunder_Bolt = null
    trigger                 gg_trg_Set_Explosion_Point = null
    trigger                 gg_trg_Start_Explosions    = null
    trigger                 gg_trg_Create_Explosion    = null
    trigger                 gg_trg_Hero_Attacked       = null
    trigger                 gg_trg_Learn_Empowered_Shot = null
    trigger                 gg_trg_Soul_Collection     = null
    trigger                 gg_trg_Start_Intermission  = null
    trigger                 gg_trg_Data_Cleanup        = null
    trigger                 gg_trg_Define_Basic_Enemy_Types = null
    trigger                 gg_trg_Define_Special_Enemy_Types = null
    trigger                 gg_trg_Initialize_Enemy_Waves = null
    trigger                 gg_trg_Create_Basic_Wave_Units = null
    trigger                 gg_trg_Create_Special_Wave_Units = null
    trigger                 gg_trg_Order_Group_Attack  = null
    trigger                 gg_trg_Set_child_wave_counter = null
    trigger                 gg_trg_Upgrade_Next_Wave   = null
    trigger                 gg_trg_Wave_Completion     = null
    trigger                 gg_trg_Startup             = null
    trigger                 gg_trg_Wave_Completion_Reward = null
    trigger                 gg_trg_Add_Food            = null
    trigger                 gg_trg_Gold_On_Kill        = null
    trigger                 gg_trg_Distribute_Welfare  = null
    trigger                 gg_trg_Add_Special_Unit_To_Shop = null
    unit                    gg_unit_n001_0006          = null
    unit                    gg_unit_n002_0007          = null
endglobals

function InitGlobals takes nothing returns nothing
    local integer i = 0
    set udg_Players = CreateForce()
    set udg_enemy_spawn_group = CreateGroup()
    set udg_wave_counter = 0
    set udg_child_wave_counter = 0
    set i = 0
    loop
        exitwhen (i > 111)
        set udg_special_enemy_type_array[i] = 'hpea'
        set i = i + 1
    endloop

    set i = 0
    loop
        exitwhen (i > 111)
        set udg_basic_enemy_type_array[i] = 'hpea'
        set i = i + 1
    endloop

    set udg_game_start_timer = CreateTimer()
    set udg_target_pos_x = 0
    set udg_target_pos_y = 0
    set udg_explosion_count = 3
    set udg_caster_angle_deg = 0
    set udg_explosion_pos_x = 0
    set udg_explosion_pos_y = 0
    set udg_explosion_iterator = 0
    set udg_expansion_distance = 250
    set udg_explosion_radius = 300
    set udg_explosion_damage = 100
    set udg_success_number = 1
    set udg_random_number = 0
    set udg_intermission_timer = CreateTimer()
    set udg_preparation_time = 65
    set udg_child_wave_interval_time = 1
    set udg_gold_cost = 0
    set udg_lumber_cost = 0
    set udg_final_child_wave = 5
    set udg_wave_earned_gold_bonus = 0
    set udg_wave_timer = CreateTimer()
    set udg_explosion_damaged_units = CreateGroup()
    set udg_wave_max_gold_bonus = 120
    set udg_Untitled_Variable_001 = 0
    set udg_basic_enemy_type_incrementor = 0
    set udg_special_enemy_type_incrementor = 0
endfunction

//***************************************************************************
//*
//*  Custom Script Code
//*
//***************************************************************************

//***************************************************************************
//*
//*  Unit Item Tables
//*
//***************************************************************************

function Unit000038_DropItems takes nothing returns nothing
    local widget  trigWidget = null
    local unit    trigUnit   = null
    local integer itemID     = 0
    local boolean canDrop    = true

    set trigWidget = bj_lastDyingWidget
    if (trigWidget == null) then
        set trigUnit = GetTriggerUnit()
    endif

    if (trigUnit != null) then
        set canDrop = not IsUnitHidden(trigUnit)
        if (canDrop and GetChangingUnit() != null) then
            set canDrop = (GetChangingUnitPrevOwner() == Player(PLAYER_NEUTRAL_AGGRESSIVE))
        endif
    endif

    if (canDrop) then
        // Item set 0
        call RandomDistReset(  )
        call RandomDistAddItem( 'I000', 100 )
        set itemID = RandomDistChoose(  )
        if (trigUnit != null) then
            call UnitDropItem( trigUnit, itemID )
        else
            call WidgetDropItem( trigWidget, itemID )
        endif

    endif

    set bj_lastDyingWidget = null
    call DestroyTrigger(GetTriggeringTrigger())
endfunction


//***************************************************************************
//*
//*  Sound Assets
//*
//***************************************************************************

function InitSounds takes nothing returns nothing
    set gg_snd_QuestNew = CreateSound( "Sound/Interface/QuestNew.flac", false, false, false, 1, 1, "DoodadsEAX" )
    call SetSoundParamsFromLabel( gg_snd_QuestNew, "QuestNew" )
    call SetSoundDuration( gg_snd_QuestNew, 3750 )
    call SetSoundVolume( gg_snd_QuestNew, 80 )
    set gg_snd_Warning = CreateSound( "Sound/Interface/Warning.flac", false, false, false, 0, 0, "DefaultEAXON" )
    call SetSoundParamsFromLabel( gg_snd_Warning, "Warning" )
    call SetSoundDuration( gg_snd_Warning, 1903 )
    call SetSoundVolume( gg_snd_Warning, 80 )
    set gg_snd_TheHornOfCenarius = CreateSound( "Sound/Ambient/DoodadEffects/TheHornOfCenarius.flac", false, false, false, 1, 1, "DefaultEAXON" )
    call SetSoundParamsFromLabel( gg_snd_TheHornOfCenarius, "HornOfCenariusSound" )
    call SetSoundDuration( gg_snd_TheHornOfCenarius, 12120 )
    call SetSoundVolume( gg_snd_TheHornOfCenarius, 127 )
    set gg_snd_IllidansTheme = "IllidansTheme"
    set gg_snd_Rescue = CreateSound( "Sound/Interface/Rescue.flac", false, false, false, 1, 1, "DoodadsEAX" )
    call SetSoundParamsFromLabel( gg_snd_Rescue, "Rescue" )
    call SetSoundDuration( gg_snd_Rescue, 3796 )
    call SetSoundVolume( gg_snd_Rescue, 80 )
    set gg_snd_ClanInvitation = CreateSound( "Sound/Interface/ClanInvitation.flac", false, false, false, 0, 0, "DefaultEAXON" )
    call SetSoundParamsFromLabel( gg_snd_ClanInvitation, "ClanInvitation" )
    call SetSoundDuration( gg_snd_ClanInvitation, 4295 )
    call SetSoundVolume( gg_snd_ClanInvitation, 127 )
    set gg_snd_ArrangedTeamInvitation = CreateSound( "Sound/Interface/ArrangedTeamInvitation.flac", false, false, false, 0, 0, "DefaultEAXON" )
    call SetSoundParamsFromLabel( gg_snd_ArrangedTeamInvitation, "ArrangedTeamInvitation" )
    call SetSoundDuration( gg_snd_ArrangedTeamInvitation, 3562 )
    call SetSoundVolume( gg_snd_ArrangedTeamInvitation, 48 )
endfunction

//***************************************************************************
//*
//*  Items
//*
//***************************************************************************

function CreateAllItems takes nothing returns nothing
    local integer itemID

    call BlzCreateItemWithSkin( 'I000', 599.3, 133.8, 'I000' )
    call BlzCreateItemWithSkin( 'I000', 5429.1, -4041.8, 'I000' )
    call BlzCreateItemWithSkin( 'I00A', 802.2, 128.8, 'I00A' )
    call BlzCreateItemWithSkin( 'I00F', 686.1, 157.3, 'I00F' )
endfunction

//***************************************************************************
//*
//*  Unit Creation
//*
//***************************************************************************

//===========================================================================
function CreateBuildingsForPlayer0 takes nothing returns nothing
    local player p = Player(0)
    local unit u
    local integer unitID
    local trigger t
    local real life

    set u = BlzCreateUnitWithSkin( p, 'h000', -128.0, 128.0, 270.000, 'h000' )
    set u = BlzCreateUnitWithSkin( p, 'n000', 192.0, 832.0, 270.000, 'n000' )
    set u = BlzCreateUnitWithSkin( p, 'ncte', 5568.0, -4224.0, 270.000, 'ncte' )
endfunction

//===========================================================================
function CreateUnitsForPlayer0 takes nothing returns nothing
    local player p = Player(0)
    local unit u
    local integer unitID
    local trigger t
    local real life

    set u = BlzCreateUnitWithSkin( p, 'oeye', -1455.1, -972.0, 218.052, 'oeye' )
    set u = BlzCreateUnitWithSkin( p, 'oeye', -2225.3, -1502.8, 183.917, 'oeye' )
    set u = BlzCreateUnitWithSkin( p, 'oeye', -3054.5, -2139.9, 342.235, 'oeye' )
    set u = BlzCreateUnitWithSkin( p, 'h007', -312.5, 735.1, 213.731, 'h007' )
    set u = BlzCreateUnitWithSkin( p, 'oeye', -3830.1, -2946.6, 111.042, 'oeye' )
    set u = BlzCreateUnitWithSkin( p, 'oeye', -4025.2, -76.0, 342.235, 'oeye' )
    set u = BlzCreateUnitWithSkin( p, 'oeye', -570.1, 1277.4, 74.896, 'oeye' )
    set u = BlzCreateUnitWithSkin( p, 'oeye', 1285.7, 447.5, 213.229, 'oeye' )
    set u = BlzCreateUnitWithSkin( p, 'oeye', 872.2, -1350.2, 239.509, 'oeye' )
    set u = BlzCreateUnitWithSkin( p, 'oeye', -2978.6, -93.4, 342.235, 'oeye' )
    set u = BlzCreateUnitWithSkin( p, 'oeye', -2239.6, -70.1, 342.235, 'oeye' )
    set u = BlzCreateUnitWithSkin( p, 'oeye', -1441.5, -116.5, 342.235, 'oeye' )
endfunction

//===========================================================================
function CreateUnitsForPlayer12 takes nothing returns nothing
    local player p = Player(12)
    local unit u
    local integer unitID
    local trigger t
    local real life

    set gg_unit_n001_0006 = BlzCreateUnitWithSkin( p, 'n001', -4192.0, 3424.0, 270.000, 'n001' )
    set u = BlzCreateUnitWithSkin( p, 'nrvi', -2030.6, 4883.8, 279.910, 'nrvi' )
    call SetUnitAcquireRange( u, 200.0 )
    set t = CreateTrigger(  )
    call TriggerRegisterUnitEvent( t, u, EVENT_UNIT_DEATH )
    call TriggerRegisterUnitEvent( t, u, EVENT_UNIT_CHANGE_OWNER )
    call TriggerAddAction( t, function Unit000038_DropItems )
    set u = BlzCreateUnitWithSkin( p, 'nska', -2229.2, 5074.4, 299.888, 'nska' )
    call SetUnitAcquireRange( u, 200.0 )
    set u = BlzCreateUnitWithSkin( p, 'nska', -2167.6, 5129.4, 290.588, 'nska' )
    call SetUnitAcquireRange( u, 200.0 )
    set u = BlzCreateUnitWithSkin( p, 'nska', -2024.4, 5141.5, 273.903, 'nska' )
    call SetUnitAcquireRange( u, 200.0 )
    set u = BlzCreateUnitWithSkin( p, 'nska', -1901.4, 5078.2, 257.789, 'nska' )
    call SetUnitAcquireRange( u, 200.0 )
    set u = BlzCreateUnitWithSkin( p, 'nkog', -2662.4, 4155.9, -32.539, 'nkog' )
    call SetUnitState( u, UNIT_STATE_MANA, 0 )
    call SetUnitAcquireRange( u, 200.0 )
    set u = BlzCreateUnitWithSkin( p, 'nkot', -2648.5, 4037.9, -14.354, 'nkot' )
    call SetUnitAcquireRange( u, 200.0 )
    set u = BlzCreateUnitWithSkin( p, 'nkot', -2564.8, 4159.2, -43.924, 'nkot' )
    call SetUnitAcquireRange( u, 200.0 )
    set u = BlzCreateUnitWithSkin( p, 'nkol', -2535.8, 4072.7, -31.958, 'nkol' )
    call SetUnitAcquireRange( u, 200.0 )
    set u = BlzCreateUnitWithSkin( p, 'narg', -2281.3, 3037.4, -49.210, 'narg' )
    call SetUnitAcquireRange( u, 200.0 )
    set u = BlzCreateUnitWithSkin( p, 'narg', -1883.3, 3031.2, 255.444, 'narg' )
    call SetUnitAcquireRange( u, 200.0 )
    set u = BlzCreateUnitWithSkin( p, 'nwrg', -2064.7, 3267.8, -81.216, 'nwrg' )
    call SetUnitAcquireRange( u, 200.0 )
endfunction

//===========================================================================
function CreateNeutralPassiveBuildings takes nothing returns nothing
    local player p = Player(PLAYER_NEUTRAL_PASSIVE)
    local unit u
    local integer unitID
    local trigger t
    local real life

    set gg_unit_n002_0007 = BlzCreateUnitWithSkin( p, 'n002', -128.0, 832.0, 270.000, 'n002' )
    call SetUnitColor( gg_unit_n002_0007, ConvertPlayerColor(0) )
    set u = BlzCreateUnitWithSkin( p, 'n003', -512.0, 832.0, 270.000, 'n003' )
    call SetUnitColor( u, ConvertPlayerColor(1) )
    set u = BlzCreateUnitWithSkin( p, 'n004', -896.0, 832.0, 270.000, 'n004' )
    set u = BlzCreateUnitWithSkin( p, 'n006', 320.0, 128.0, 270.000, 'n006' )
    call SetUnitColor( u, ConvertPlayerColor(0) )
    set u = BlzCreateUnitWithSkin( p, 'nshp', 2560.0, -1600.0, 270.000, 'nshp' )
    set u = BlzCreateUnitWithSkin( p, 'nfoh', 5760.0, -3840.0, 270.000, 'nfoh' )
    set u = BlzCreateUnitWithSkin( p, 'nmoo', 5184.0, -4288.0, 270.000, 'nmoo' )
    set u = BlzCreateUnitWithSkin( p, 'h00J', -64.0, -192.0, 270.000, 'h00J' )
endfunction

//===========================================================================
function CreateNeutralPassive takes nothing returns nothing
    local player p = Player(PLAYER_NEUTRAL_PASSIVE)
    local unit u
    local integer unitID
    local trigger t
    local real life

    set u = BlzCreateUnitWithSkin( p, 'H005', 578.9, 928.3, 250.790, 'H005' )
endfunction

//===========================================================================
function CreatePlayerBuildings takes nothing returns nothing
    call CreateBuildingsForPlayer0(  )
endfunction

//===========================================================================
function CreatePlayerUnits takes nothing returns nothing
    call CreateUnitsForPlayer0(  )
    call CreateUnitsForPlayer12(  )
endfunction

//===========================================================================
function CreateAllUnits takes nothing returns nothing
    call CreateNeutralPassiveBuildings(  )
    call CreatePlayerBuildings(  )
    call CreateNeutralPassive(  )
    call CreatePlayerUnits(  )
endfunction

//***************************************************************************
//*
//*  Regions
//*
//***************************************************************************

function CreateRegions takes nothing returns nothing
    local weathereffect we

    set gg_rct_Player_Spawn = Rect( 64.0, -448.0, 480.0, -32.0 )
    set gg_rct_Enemy_Spawn = Rect( -4832.0, -256.0, -4480.0, 128.0 )
    set gg_rct_Enemy_Wave_Target = Rect( -384.0, -256.0, -256.0, -96.0 )
    set gg_rct_Tower_Of_Restoration_Check = Rect( 1280.0, 384.0, 2496.0, 1600.0 )
    set gg_rct_Enemy_Acolyte_Spawn = Rect( -5024.0, 3360.0, -4736.0, 3616.0 )
endfunction

//***************************************************************************
//*
//*  Triggers
//*
//***************************************************************************

//===========================================================================
// Trigger: Victory Animation
//===========================================================================
function Trig_Victory_Animation_Actions takes nothing returns nothing
    call SetUnitAnimation( GetTriggerUnit(), "victory" )
endfunction

//===========================================================================
function InitTrig_Victory_Animation takes nothing returns nothing
    set gg_trg_Victory_Animation = CreateTrigger(  )
    call TriggerRegisterPlayerSelectionEventBJ( gg_trg_Victory_Animation, Player(0), true )
    call TriggerAddAction( gg_trg_Victory_Animation, function Trig_Victory_Animation_Actions )
endfunction

//===========================================================================
// Trigger: TODO
//
// Add a death system where if a hero dies they leave their soul behind. The soul will have the model of the players hero minimized and turned dark. The soul will be an item the user can pick up and bring back to an altar so they can be revived.
// Create trigger to display hero stats (move speed, attack range, stat gain, base stats, etc) when selected their hero or clicking on button to show stats.
// Events
// 	Add a shrine of power that does a howl of terror on structures.
// 	When picking up a dead heroe's soul, if a user is quick the hero revives with more health and mana.
// Hero:
// 	Add a hero who is focused on providing support to towers. Buffs etc..
// 	Add illusionist hero who can capture the soul of an enemy into his book and later on create an illusion of that unit.
// 	Add the beastmaster model for a hero who is agility based.
// 	Add hero with a skeleton 'pet' that will never die. Infinite reincarnation. 
// 	A hero that loses control of their hero for a time and goes crazy killing everything.
// 	
// Towers:
// 	Add an illusion tower that has a chance to spawn an illusion of what it is attacking.
// 	Add aura tower that uses statue model.
// Items:
// 	Add item called Emergency Defense Erection(lel) which deploys a tower and some walls around it temporarily.
// 	Add enchanted clock which increases your movement and attack speed.
// Enemies:
// 	Add enemy that can't hit structures, only units.
// Abilities:
// 	Add curse to be applied to buildings and add a dispel that works on buildings
// 	Add ability for N.U.B. tower that lets it deploy a temporary unit onto the field. Use pocket factory ability to start out and remove units spawned.
// 	Hero ability to change the armor type of structures.
// Objects:
// 	Add damage reflection for regular barricades.
// 	Add ice wall that costs 25g/25w. Applies slow to attackers nearby. MAybe add a periodic ice pulse that damages or slows as an upgrade
// 	Add Taunt to treant wall.
// 	Add a wall with taunt that causes attackers to attack and recieve double damage back.
// Trigger List:
// 	On Nightmare
//===========================================================================
function Trig_TODO_Actions takes nothing returns nothing
endfunction

//===========================================================================
function InitTrig_TODO takes nothing returns nothing
    set gg_trg_TODO = CreateTrigger(  )
    call TriggerAddAction( gg_trg_TODO, function Trig_TODO_Actions )
endfunction

//===========================================================================
// Trigger: Enable Shrine of Power
//
// A unit will cast siphon mana onto the shrine. Players mus kill the unit or it will be successful and empower all enemy units.
// IDEA: For every successful completeion, the level of Demonic Power Increases making it more punishing when the players fail to stop the Shrine from powering up.
//===========================================================================
function Trig_Enable_Shrine_of_Power_Actions takes nothing returns nothing
    call SetPlayerTechResearchedSwap( 'R001', 1, Player(12) )
    call PlaySoundBJ( gg_snd_Warning )
    call DisplayTextToForce( GetPlayersAll(), "TRIGSTR_040" )
endfunction

//===========================================================================
function InitTrig_Enable_Shrine_of_Power takes nothing returns nothing
    set gg_trg_Enable_Shrine_of_Power = CreateTrigger(  )
    call TriggerRegisterUnitManaEvent( gg_trg_Enable_Shrine_of_Power, gg_unit_n001_0006, GREATER_THAN_OR_EQUAL, 99.00 )
    call TriggerAddAction( gg_trg_Enable_Shrine_of_Power, function Trig_Enable_Shrine_of_Power_Actions )
endfunction

//===========================================================================
// Trigger: On Immolation
//===========================================================================
function Trig_On_Immolation_Conditions takes nothing returns boolean
    if ( not ( GetSpellAbilityId() == 'A015' ) ) then
        return false
    endif
    return true
endfunction

function Trig_On_Immolation_Actions takes nothing returns nothing
    call DisplayTextToForce( GetPlayersAll(), "TRIGSTR_368" )
endfunction

//===========================================================================
function InitTrig_On_Immolation takes nothing returns nothing
    set gg_trg_On_Immolation = CreateTrigger(  )
    call TriggerRegisterAnyUnitEventBJ( gg_trg_On_Immolation, EVENT_PLAYER_UNIT_SPELL_EFFECT )
    call TriggerAddCondition( gg_trg_On_Immolation, Condition( function Trig_On_Immolation_Conditions ) )
    call TriggerAddAction( gg_trg_On_Immolation, function Trig_On_Immolation_Actions )
endfunction

//===========================================================================
// Trigger: On Salvage
//===========================================================================
function Trig_On_Salvage_Conditions takes nothing returns boolean
    if ( not ( GetSpellAbilityId() == 'A00U' ) ) then
        return false
    endif
    return true
endfunction

function Trig_On_Salvage_Actions takes nothing returns nothing
    call DisplayTextToForce( GetPlayersAll(), "TRIGSTR_277" )
    set udg_gold_cost = BlzGetUnitIntegerField(GetTriggerUnit(), UNIT_IF_GOLD_BOUNTY_AWARDED_BASE)
    set udg_lumber_cost = BlzGetUnitIntegerField(GetTriggerUnit(), UNIT_IF_LUMBER_BOUNTY_AWARDED_BASE)
    call KillUnit( GetTriggerUnit() )
    call AdjustPlayerStateBJ( udg_gold_cost, GetOwningPlayer(GetTriggerUnit()), PLAYER_STATE_RESOURCE_GOLD )
    call AdjustPlayerStateBJ( udg_lumber_cost, GetOwningPlayer(GetTriggerUnit()), PLAYER_STATE_RESOURCE_LUMBER )
endfunction

//===========================================================================
function InitTrig_On_Salvage takes nothing returns nothing
    set gg_trg_On_Salvage = CreateTrigger(  )
    call TriggerRegisterAnyUnitEventBJ( gg_trg_On_Salvage, EVENT_PLAYER_UNIT_SPELL_EFFECT )
    call TriggerAddCondition( gg_trg_On_Salvage, Condition( function Trig_On_Salvage_Conditions ) )
    call TriggerAddAction( gg_trg_On_Salvage, function Trig_On_Salvage_Actions )
endfunction

//===========================================================================
// Trigger: Set Unit Position
//
// Target unit must be set in the originating trigger for accurate calculations.
//===========================================================================
function Trig_Set_Unit_Position_Actions takes nothing returns nothing
    set udg_target_pos_x = R2I(GetLocationX(GetUnitLoc(udg_target_unit)))
    set udg_target_pos_y = R2I(GetLocationY(GetUnitLoc(udg_target_unit)))
endfunction

//===========================================================================
function InitTrig_Set_Unit_Position takes nothing returns nothing
    set gg_trg_Set_Unit_Position = CreateTrigger(  )
    call TriggerAddAction( gg_trg_Set_Unit_Position, function Trig_Set_Unit_Position_Actions )
endfunction

//===========================================================================
// Trigger: On Nightmare
//
// Make the cost of conversion cheaper as the hero levels up the ability. 50, 40, 30
//===========================================================================
function Trig_On_Nightmare_Conditions takes nothing returns boolean
    if ( not ( GetSpellAbilityId() == 'A00L' ) ) then
        return false
    endif
    return true
endfunction

function Trig_On_Nightmare_Func005001 takes nothing returns boolean
    return ( UnitHasBuffBJ(udg_nightmare_target, 'BUsl') == true )
endfunction

function Trig_On_Nightmare_Actions takes nothing returns nothing
    set udg_nightmare_target = GetSpellTargetUnit()
    set udg_nightmare_caster = GetTriggerUnit()
    call DisplayTextToForce( GetPlayersAll(), ( "Nightmare Target: " + GetUnitName(udg_nightmare_target) ) )
    // Here we wait until the nightmare buff has been applied, then we wait for it to expire and do more logic.
    loop
        exitwhen ( Trig_On_Nightmare_Func005001() )
        call TriggerSleepAction(RMaxBJ(bj_WAIT_FOR_COND_MIN_INTERVAL, 0.10))
    endloop
    call TriggerExecute( gg_trg_Swap_Nightmare )
endfunction

//===========================================================================
function InitTrig_On_Nightmare takes nothing returns nothing
    set gg_trg_On_Nightmare = CreateTrigger(  )
    call TriggerRegisterAnyUnitEventBJ( gg_trg_On_Nightmare, EVENT_PLAYER_UNIT_SPELL_EFFECT )
    call TriggerAddCondition( gg_trg_On_Nightmare, Condition( function Trig_On_Nightmare_Conditions ) )
    call TriggerAddAction( gg_trg_On_Nightmare, function Trig_On_Nightmare_Actions )
endfunction

//===========================================================================
// Trigger: Swap Nightmare
//===========================================================================
function Trig_Swap_Nightmare_Func005001 takes nothing returns boolean
    return ( UnitHasBuffBJ(udg_nightmare_target, 'BUsl') == false )
endfunction

function Trig_Swap_Nightmare_Actions takes nothing returns nothing
    call BlzUnitHideAbility( udg_nightmare_caster, 'A00L', true )
    call UnitAddAbilityBJ( 'A00M', udg_nightmare_caster )
    set udg_convert_ability = BlzGetUnitAbility(udg_nightmare_caster, 'A00M')
    call BlzSetAbilityIntegerLevelFieldBJ( udg_convert_ability, ABILITY_ILF_MANA_COST, 0, ( BlzGetUnitMaxHP(udg_nightmare_target) / 2 ) )
    loop
        exitwhen ( Trig_Swap_Nightmare_Func005001() )
        call TriggerSleepAction(RMaxBJ(bj_WAIT_FOR_COND_MIN_INTERVAL, 0.10))
    endloop
    call UnitRemoveAbilityBJ( 'A00M', udg_nightmare_caster )
    call BlzUnitHideAbility( udg_nightmare_caster, 'A00L', false )
endfunction

//===========================================================================
function InitTrig_Swap_Nightmare takes nothing returns nothing
    set gg_trg_Swap_Nightmare = CreateTrigger(  )
    call TriggerAddAction( gg_trg_Swap_Nightmare, function Trig_Swap_Nightmare_Actions )
endfunction

//===========================================================================
// Trigger: On Convert
//===========================================================================
function Trig_On_Convert_Conditions takes nothing returns boolean
    if ( not ( GetSpellAbilityId() == 'A00M' ) ) then
        return false
    endif
    return true
endfunction

function Trig_On_Convert_Actions takes nothing returns nothing
    call SetUnitOwner( udg_converted_unit, Player(PLAYER_NEUTRAL_AGGRESSIVE), true )
    set udg_converted_unit = udg_nightmare_target
    call SetUnitOwner( udg_nightmare_target, GetTriggerPlayer(), true )
endfunction

//===========================================================================
function InitTrig_On_Convert takes nothing returns nothing
    set gg_trg_On_Convert = CreateTrigger(  )
    call TriggerRegisterAnyUnitEventBJ( gg_trg_On_Convert, EVENT_PLAYER_UNIT_SPELL_EFFECT )
    call TriggerAddCondition( gg_trg_On_Convert, Condition( function Trig_On_Convert_Conditions ) )
    call TriggerAddAction( gg_trg_On_Convert, function Trig_On_Convert_Actions )
endfunction

//===========================================================================
// Trigger: Create Grass
//===========================================================================
function Trig_Create_Grass_Conditions takes nothing returns boolean
    if ( not ( GetSpellAbilityId() == 'A00G' ) ) then
        return false
    endif
    return true
endfunction

function Trig_Create_Grass_Actions takes nothing returns nothing
    call DisplayTextToForce( GetPlayersAll(), "TRIGSTR_160" )
    call TriggerSleepAction( 0.50 )
    set bj_forLoopAIndex = 1
    set bj_forLoopAIndexEnd = 4
    loop
        exitwhen bj_forLoopAIndex > bj_forLoopAIndexEnd
        call SetTerrainTypeBJ( GetRandomLocInRect(RectFromCenterSizeBJ(GetSpellTargetLoc(), 600.00, 600.00)), 'Lgrd', -1, 1, 0 )
        set bj_forLoopAIndex = bj_forLoopAIndex + 1
    endloop
endfunction

//===========================================================================
function InitTrig_Create_Grass takes nothing returns nothing
    set gg_trg_Create_Grass = CreateTrigger(  )
    call TriggerRegisterAnyUnitEventBJ( gg_trg_Create_Grass, EVENT_PLAYER_UNIT_SPELL_EFFECT )
    call TriggerAddCondition( gg_trg_Create_Grass, Condition( function Trig_Create_Grass_Conditions ) )
    call TriggerAddAction( gg_trg_Create_Grass, function Trig_Create_Grass_Actions )
endfunction

//===========================================================================
// Trigger: Charged Blink Event
//===========================================================================
function Trig_Charged_Blink_Event_Conditions takes nothing returns boolean
    if ( not ( GetSpellAbilityId() == 'A00D' ) ) then
        return false
    endif
    return true
endfunction

function Trig_Charged_Blink_Event_Actions takes nothing returns nothing
    call DisplayTextToForce( GetPlayersAll(), "TRIGSTR_122" )
    set udg_rolling_thunder_bolt_caster = GetTriggerUnit()
    set udg_explosion_pos_x = R2I(GetLocationX(GetSpellTargetLoc()))
    set udg_explosion_pos_y = R2I(GetLocationY(GetSpellTargetLoc()))
    call TriggerExecute( gg_trg_Create_Explosion )
endfunction

//===========================================================================
function InitTrig_Charged_Blink_Event takes nothing returns nothing
    set gg_trg_Charged_Blink_Event = CreateTrigger(  )
    call TriggerRegisterAnyUnitEventBJ( gg_trg_Charged_Blink_Event, EVENT_PLAYER_UNIT_SPELL_EFFECT )
    call TriggerAddCondition( gg_trg_Charged_Blink_Event, Condition( function Trig_Charged_Blink_Event_Conditions ) )
    call TriggerAddAction( gg_trg_Charged_Blink_Event, function Trig_Charged_Blink_Event_Actions )
endfunction

//===========================================================================
// Trigger: On Rolling Thunder Bolt
//===========================================================================
function Trig_On_Rolling_Thunder_Bolt_Conditions takes nothing returns boolean
    if ( not ( GetSpellAbilityId() == 'A00A' ) ) then
        return false
    endif
    return true
endfunction

function Trig_On_Rolling_Thunder_Bolt_Func007001001 takes nothing returns boolean
    return ( UnitHasBuffBJ(udg_target_unit, 'BPSE') == true )
endfunction

function Trig_On_Rolling_Thunder_Bolt_Func007001002 takes nothing returns boolean
    return ( IsUnitDeadBJ(udg_target_unit) == true )
endfunction

function Trig_On_Rolling_Thunder_Bolt_Func007001 takes nothing returns boolean
    return GetBooleanOr( Trig_On_Rolling_Thunder_Bolt_Func007001001(), Trig_On_Rolling_Thunder_Bolt_Func007001002() )
endfunction

function Trig_On_Rolling_Thunder_Bolt_Actions takes nothing returns nothing
    set udg_rolling_thunder_bolt_caster = GetTriggerUnit()
    set udg_caster_angle_deg = R2I(GetUnitFacing(GetTriggerUnit()))
    set udg_target_unit = GetSpellTargetUnit()
    call DisplayTextToForce( GetPlayersAll(), ( "Ability Cast! " + ( "Target: " + GetUnitName(udg_target_unit) ) ) )
    loop
        exitwhen ( Trig_On_Rolling_Thunder_Bolt_Func007001() )
        call TriggerSleepAction(RMaxBJ(bj_WAIT_FOR_COND_MIN_INTERVAL, 0.10))
    endloop
    call DisplayTextToForce( GetPlayersAll(), "TRIGSTR_094" )
    call TriggerExecute( gg_trg_Set_Unit_Position )
    call TriggerExecute( gg_trg_Start_Explosions )
endfunction

//===========================================================================
function InitTrig_On_Rolling_Thunder_Bolt takes nothing returns nothing
    set gg_trg_On_Rolling_Thunder_Bolt = CreateTrigger(  )
    call TriggerRegisterAnyUnitEventBJ( gg_trg_On_Rolling_Thunder_Bolt, EVENT_PLAYER_UNIT_SPELL_EFFECT )
    call TriggerAddCondition( gg_trg_On_Rolling_Thunder_Bolt, Condition( function Trig_On_Rolling_Thunder_Bolt_Conditions ) )
    call TriggerAddAction( gg_trg_On_Rolling_Thunder_Bolt, function Trig_On_Rolling_Thunder_Bolt_Actions )
endfunction

//===========================================================================
// Trigger: Set Explosion Point
//===========================================================================
function Trig_Set_Explosion_Point_Actions takes nothing returns nothing
    set udg_explosion_pos_x = R2I(( ( I2R(udg_expansion_distance) * ( I2R(udg_explosion_iterator) * CosBJ(I2R(udg_caster_angle_deg)) ) ) + I2R(udg_target_pos_x) ))
    set udg_explosion_pos_y = R2I(( ( I2R(udg_expansion_distance) * ( I2R(udg_explosion_iterator) * SinBJ(I2R(udg_caster_angle_deg)) ) ) + I2R(udg_target_pos_y) ))
    call DisplayTextToForce( GetPlayersAll(), ( "Explosion #: " + I2S(udg_explosion_iterator) ) )
    call DisplayTextToForce( GetPlayersAll(), ( "Eplosion X: " + ( I2S(udg_explosion_pos_x) + ( " Explosion Y: " + I2S(udg_explosion_pos_y) ) ) ) )
endfunction

//===========================================================================
function InitTrig_Set_Explosion_Point takes nothing returns nothing
    set gg_trg_Set_Explosion_Point = CreateTrigger(  )
    call TriggerAddAction( gg_trg_Set_Explosion_Point, function Trig_Set_Explosion_Point_Actions )
endfunction

//===========================================================================
// Trigger: Start Explosions
//===========================================================================
function Trig_Start_Explosions_Actions takes nothing returns nothing
    // Includes start and endpoint of interval
    call DisplayTextToForce( GetPlayersAll(), ( "Explosion Count: " + I2S(udg_explosion_count) ) )
    set bj_forLoopAIndex = 1
    set bj_forLoopAIndexEnd = udg_explosion_count
    loop
        exitwhen bj_forLoopAIndex > bj_forLoopAIndexEnd
        call TriggerExecute( gg_trg_Set_Explosion_Point )
        call TriggerExecute( gg_trg_Create_Explosion )
        set udg_explosion_iterator = ( udg_explosion_iterator + 1 )
        call TriggerSleepAction( 0.10 )
        set bj_forLoopAIndex = bj_forLoopAIndex + 1
    endloop
    set udg_explosion_iterator = 0
    call DisplayTextToForce( GetPlayersAll(), "TRIGSTR_097" )
endfunction

//===========================================================================
function InitTrig_Start_Explosions takes nothing returns nothing
    set gg_trg_Start_Explosions = CreateTrigger(  )
    call TriggerAddAction( gg_trg_Start_Explosions, function Trig_Start_Explosions_Actions )
endfunction

//===========================================================================
// Trigger: Create Explosion
//===========================================================================
function Trig_Create_Explosion_Func005Func002C takes nothing returns boolean
    if ( not ( IsUnitAlly(GetEnumUnit(), GetOwningPlayer(udg_rolling_thunder_bolt_caster)) == false ) ) then
        return false
    endif
    return true
endfunction

function Trig_Create_Explosion_Func005A takes nothing returns nothing
    // BUG: Special effect doesn't get created for certain angles.
    if ( Trig_Create_Explosion_Func005Func002C() ) then
        call UnitDamageTargetBJ( udg_rolling_thunder_bolt_caster, GetEnumUnit(), I2R(udg_explosion_damage), ATTACK_TYPE_NORMAL, DAMAGE_TYPE_MAGIC )
    else
        call DoNothing(  )
    endif
endfunction

function Trig_Create_Explosion_Actions takes nothing returns nothing
    call AddSpecialEffectLocBJ( Location(I2R(udg_explosion_pos_x), I2R(udg_explosion_pos_y)), "Abilities\\Spells\\Human\\ThunderClap\\ThunderClapCaster.mdl" )
    // Temporary Fix for Reforged Graphics. Effect Keeps playing over and over for some reason.
    set udg_explosion_effect = GetLastCreatedEffectBJ()
    call DestroyEffectBJ( udg_explosion_effect )
    call ForGroupBJ( GetUnitsInRangeOfLocAll(I2R(udg_explosion_radius), Location(I2R(udg_explosion_pos_x), I2R(udg_explosion_pos_y))), function Trig_Create_Explosion_Func005A )
endfunction

//===========================================================================
function InitTrig_Create_Explosion takes nothing returns nothing
    set gg_trg_Create_Explosion = CreateTrigger(  )
    call TriggerAddAction( gg_trg_Create_Explosion, function Trig_Create_Explosion_Actions )
endfunction

//===========================================================================
// Trigger: Hero Attacked
//===========================================================================
function Trig_Hero_Attacked_Conditions takes nothing returns boolean
    if ( not ( GetUnitTypeId(GetAttackedUnitBJ()) == 'H00D' ) ) then
        return false
    endif
    return true
endfunction

function Trig_Hero_Attacked_Func002C takes nothing returns boolean
    if ( not ( udg_random_number == udg_success_number ) ) then
        return false
    endif
    return true
endfunction

function Trig_Hero_Attacked_Actions takes nothing returns nothing
    set udg_random_number = GetRandomInt(0, 10)
    if ( Trig_Hero_Attacked_Func002C() ) then
        call UnitDamageTargetBJ( GetAttackedUnitBJ(), GetAttacker(), 100.00, ATTACK_TYPE_NORMAL, DAMAGE_TYPE_NORMAL )
        call AddSpecialEffectLocBJ( GetUnitLoc(GetAttacker()), "Abilities\\Spells\\Orc\\FeralSpirit\\feralspiritdone.mdl" )
    else
    endif
endfunction

//===========================================================================
function InitTrig_Hero_Attacked takes nothing returns nothing
    set gg_trg_Hero_Attacked = CreateTrigger(  )
    call TriggerRegisterAnyUnitEventBJ( gg_trg_Hero_Attacked, EVENT_PLAYER_UNIT_ATTACKED )
    call TriggerAddCondition( gg_trg_Hero_Attacked, Condition( function Trig_Hero_Attacked_Conditions ) )
    call TriggerAddAction( gg_trg_Hero_Attacked, function Trig_Hero_Attacked_Actions )
endfunction

//===========================================================================
// Trigger: Learn Empowered Shot
//===========================================================================
function Trig_Learn_Empowered_Shot_Conditions takes nothing returns boolean
    if ( not ( GetItemTypeId(GetManipulatedItem()) == 'I000' ) ) then
        return false
    endif
    return true
endfunction

function Trig_Learn_Empowered_Shot_Actions takes nothing returns nothing
    call DisplayTextToForce( GetPlayersAll(), "TRIGSTR_019" )
    call SetPlayerTechResearchedSwap( 'R000', 1, Player(0) )
endfunction

//===========================================================================
function InitTrig_Learn_Empowered_Shot takes nothing returns nothing
    set gg_trg_Learn_Empowered_Shot = CreateTrigger(  )
    call TriggerRegisterAnyUnitEventBJ( gg_trg_Learn_Empowered_Shot, EVENT_PLAYER_UNIT_PICKUP_ITEM )
    call TriggerAddCondition( gg_trg_Learn_Empowered_Shot, Condition( function Trig_Learn_Empowered_Shot_Conditions ) )
    call TriggerAddAction( gg_trg_Learn_Empowered_Shot, function Trig_Learn_Empowered_Shot_Actions )
endfunction

//===========================================================================
// Trigger: Soul Collection
//
// The tower will recieve mana for nearby enemy deaths.
//===========================================================================
function Trig_Soul_Collection_Conditions takes nothing returns boolean
    if ( not ( IsUnitType(GetTriggerUnit(), UNIT_TYPE_STRUCTURE) == false ) ) then
        return false
    endif
    return true
endfunction

function Trig_Soul_Collection_Func003Func001C takes nothing returns boolean
    if ( not ( GetUnitTypeId(GetEnumUnit()) == 'h003' ) ) then
        return false
    endif
    return true
endfunction

function Trig_Soul_Collection_Func003A takes nothing returns nothing
    if ( Trig_Soul_Collection_Func003Func001C() ) then
        call AddSpecialEffectLocBJ( GetUnitLoc(GetTriggerUnit()), "Abilities\\Spells\\Items\\TomeOfRetraining\\TomeOfRetrainingCaster.mdl" )
        set udg_tower_in_range = GetEnumUnit()
        call SetUnitManaBJ( udg_tower_in_range, ( BlzGetUnitRealField(GetEnumUnit(), UNIT_RF_MANA) + 1 ) )
    else
    endif
endfunction

function Trig_Soul_Collection_Actions takes nothing returns nothing
    call ForGroupBJ( GetUnitsInRangeOfLocAll(1000.00, GetUnitLoc(GetDyingUnit())), function Trig_Soul_Collection_Func003A )
endfunction

//===========================================================================
function InitTrig_Soul_Collection takes nothing returns nothing
    set gg_trg_Soul_Collection = CreateTrigger(  )
    call TriggerRegisterAnyUnitEventBJ( gg_trg_Soul_Collection, EVENT_PLAYER_UNIT_DEATH )
    call TriggerAddCondition( gg_trg_Soul_Collection, Condition( function Trig_Soul_Collection_Conditions ) )
    call TriggerAddAction( gg_trg_Soul_Collection, function Trig_Soul_Collection_Actions )
endfunction

//===========================================================================
// Trigger: Start Intermission
//
// Starts a brief intermission in between waves.
// Intermission only starts when the special unit has been killed.
//===========================================================================
function Trig_Start_Intermission_Conditions takes nothing returns boolean
    if ( not ( GetUnitTypeId(GetTriggerUnit()) == udg_special_enemy_type_array[udg_wave_counter] ) ) then
        return false
    endif
    return true
endfunction

function Trig_Start_Intermission_Actions takes nothing returns nothing
    call PlaySoundBJ( gg_snd_ClanInvitation )
    call DisplayTextToForce( GetPlayersAll(), "TRIGSTR_121" )
    set udg_wave_earned_gold_bonus = R2I(TimerGetRemaining(udg_wave_timer))
    call PauseTimerBJ( true, udg_wave_timer )
    call TriggerExecute( gg_trg_Wave_Completion_Reward )
    call StartTimerBJ( udg_intermission_timer, false, 60.00 )
    call CreateTimerDialogBJ( udg_intermission_timer, "TRIGSTR_118" )
    set udg_intermission_timer_window = GetLastCreatedTimerDialogBJ()
    call TriggerExecute( gg_trg_Upgrade_Next_Wave )
endfunction

//===========================================================================
function InitTrig_Start_Intermission takes nothing returns nothing
    set gg_trg_Start_Intermission = CreateTrigger(  )
    call TriggerRegisterAnyUnitEventBJ( gg_trg_Start_Intermission, EVENT_PLAYER_UNIT_DEATH )
    call TriggerRegisterAnyUnitEventBJ( gg_trg_Start_Intermission, EVENT_PLAYER_UNIT_CHANGE_OWNER )
    call TriggerAddCondition( gg_trg_Start_Intermission, Condition( function Trig_Start_Intermission_Conditions ) )
    call TriggerAddAction( gg_trg_Start_Intermission, function Trig_Start_Intermission_Actions )
endfunction

//===========================================================================
// Trigger: Data Cleanup
//
// Remove the unit from the enemy spawn group on death.
//===========================================================================
function Trig_Data_Cleanup_Conditions takes nothing returns boolean
    if ( not ( IsUnitInGroup(GetTriggerUnit(), udg_enemy_spawn_group) == true ) ) then
        return false
    endif
    return true
endfunction

function Trig_Data_Cleanup_Actions takes nothing returns nothing
    call GroupRemoveUnitSimple( GetTriggerUnit(), udg_enemy_spawn_group )
    call DisplayTextToForce( GetPlayersAll(), "TRIGSTR_009" )
endfunction

//===========================================================================
function InitTrig_Data_Cleanup takes nothing returns nothing
    set gg_trg_Data_Cleanup = CreateTrigger(  )
    call TriggerRegisterAnyUnitEventBJ( gg_trg_Data_Cleanup, EVENT_PLAYER_UNIT_DEATH )
    call TriggerAddCondition( gg_trg_Data_Cleanup, Condition( function Trig_Data_Cleanup_Conditions ) )
    call TriggerAddAction( gg_trg_Data_Cleanup, function Trig_Data_Cleanup_Actions )
endfunction

//===========================================================================
// Trigger: Define Basic Enemy Types
//
// The enemy type is based off the enemy type incrementor so if I ever need to change 1 enemy type in between or add a new one I won't have to change the array index for the following defined enemy types.
//===========================================================================
function Trig_Define_Basic_Enemy_Types_Actions takes nothing returns nothing
    // WAVE
    set udg_basic_enemy_type_array[udg_basic_enemy_type_incrementor] = 'nzom'
    set udg_basic_enemy_type_incrementor = ( udg_basic_enemy_type_incrementor + 1 )
    // WAVE
    set udg_basic_enemy_type_array[udg_basic_enemy_type_incrementor] = 'h00N'
    set udg_basic_enemy_type_incrementor = ( udg_basic_enemy_type_incrementor + 1 )
    // WAVE
    set udg_basic_enemy_type_array[udg_basic_enemy_type_incrementor] = 'ogru'
    set udg_basic_enemy_type_incrementor = ( udg_basic_enemy_type_incrementor + 1 )
    // WAVE
    set udg_basic_enemy_type_array[udg_basic_enemy_type_incrementor] = 'nfrl'
    set udg_basic_enemy_type_incrementor = ( udg_basic_enemy_type_incrementor + 1 )
    // WAVE
    set udg_basic_enemy_type_array[udg_basic_enemy_type_incrementor] = 'nsln'
    set udg_basic_enemy_type_incrementor = ( udg_basic_enemy_type_incrementor + 1 )
    // WAVE
    set udg_basic_enemy_type_array[udg_basic_enemy_type_incrementor] = 'nowe'
    set udg_basic_enemy_type_incrementor = ( udg_basic_enemy_type_incrementor + 1 )
    // WAVE
    set udg_basic_enemy_type_array[udg_basic_enemy_type_incrementor] = 'npfm'
    set udg_basic_enemy_type_incrementor = ( udg_basic_enemy_type_incrementor + 1 )
    // WAVE
endfunction

//===========================================================================
function InitTrig_Define_Basic_Enemy_Types takes nothing returns nothing
    set gg_trg_Define_Basic_Enemy_Types = CreateTrigger(  )
    call TriggerRegisterTimerEventSingle( gg_trg_Define_Basic_Enemy_Types, 1.00 )
    call TriggerAddAction( gg_trg_Define_Basic_Enemy_Types, function Trig_Define_Basic_Enemy_Types_Actions )
endfunction

//===========================================================================
// Trigger: Define Special Enemy Types
//===========================================================================
function Trig_Define_Special_Enemy_Types_Actions takes nothing returns nothing
    // WAVE
    set udg_special_enemy_type_array[udg_special_enemy_type_incrementor] = 'n009'
    set udg_special_enemy_type_incrementor = ( udg_special_enemy_type_incrementor + 1 )
    // WAVE
    set udg_special_enemy_type_array[udg_special_enemy_type_incrementor] = 'h004'
    set udg_special_enemy_type_incrementor = ( udg_special_enemy_type_incrementor + 1 )
    // WAVE
    set udg_special_enemy_type_array[udg_special_enemy_type_incrementor] = 'o000'
    set udg_special_enemy_type_incrementor = ( udg_special_enemy_type_incrementor + 1 )
    // WAVE
    set udg_special_enemy_type_array[udg_special_enemy_type_incrementor] = 'o001'
    set udg_special_enemy_type_incrementor = ( udg_special_enemy_type_incrementor + 1 )
    // WAVE
    set udg_special_enemy_type_array[udg_special_enemy_type_incrementor] = 'u001'
    set udg_special_enemy_type_incrementor = ( udg_special_enemy_type_incrementor + 1 )
    // WAVE
    set udg_special_enemy_type_array[udg_special_enemy_type_incrementor] = 'u002'
    set udg_special_enemy_type_incrementor = ( udg_special_enemy_type_incrementor + 1 )
    // WAVE
    set udg_special_enemy_type_array[udg_special_enemy_type_incrementor] = 'n008'
    set udg_special_enemy_type_incrementor = ( udg_special_enemy_type_incrementor + 1 )
    // WAVE
endfunction

//===========================================================================
function InitTrig_Define_Special_Enemy_Types takes nothing returns nothing
    set gg_trg_Define_Special_Enemy_Types = CreateTrigger(  )
    call TriggerRegisterTimerEventSingle( gg_trg_Define_Special_Enemy_Types, 1.00 )
    call TriggerAddAction( gg_trg_Define_Special_Enemy_Types, function Trig_Define_Special_Enemy_Types_Actions )
endfunction

//===========================================================================
// Trigger: Initialize Enemy Waves
//
// Begins wave creation after intial game start timer and after intermission timers.
//===========================================================================
function Trig_Initialize_Enemy_Waves_Actions takes nothing returns nothing
    call PlaySoundBJ( gg_snd_Rescue )
    call DisplayTextToForce( GetPlayersAll(), "TRIGSTR_300" )
    call StartTimerBJ( udg_wave_timer, false, I2R(udg_wave_max_gold_bonus) )
    call EnableTrigger( gg_trg_Create_Basic_Wave_Units )
    call DestroyTimerDialogBJ( udg_game_start_timer_window )
    call DestroyTimerDialogBJ( udg_intermission_timer_window )
endfunction

//===========================================================================
function InitTrig_Initialize_Enemy_Waves takes nothing returns nothing
    set gg_trg_Initialize_Enemy_Waves = CreateTrigger(  )
    call TriggerRegisterTimerExpireEventBJ( gg_trg_Initialize_Enemy_Waves, udg_game_start_timer )
    call TriggerRegisterTimerExpireEventBJ( gg_trg_Initialize_Enemy_Waves, udg_intermission_timer )
    call TriggerAddAction( gg_trg_Initialize_Enemy_Waves, function Trig_Initialize_Enemy_Waves_Actions )
endfunction

//===========================================================================
// Trigger: Create Basic Wave Units
//
// Turned on after the start timer has expired.
// Create enemy units on a fixed time interval. Difficulty increases on a fixed time interval.
// The number of basic units sent per child wave increases with every child wave sent.
//===========================================================================
function Trig_Create_Basic_Wave_Units_Actions takes nothing returns nothing
    set bj_forLoopAIndex = 0
    set bj_forLoopAIndexEnd = udg_child_wave_counter
    loop
        exitwhen bj_forLoopAIndex > bj_forLoopAIndexEnd
        call CreateNUnitsAtLoc( 1, udg_basic_enemy_type_array[udg_wave_counter], Player(12), GetRectCenter(gg_rct_Enemy_Spawn), bj_UNIT_FACING )
        call GroupAddUnitSimple( GetLastCreatedUnit(), udg_enemy_spawn_group )
        set bj_forLoopAIndex = bj_forLoopAIndex + 1
    endloop
    call DisplayTextToForce( GetPlayersAll(), ( "Current Child Wave Number: " + I2S(udg_child_wave_counter) ) )
    call TriggerExecute( gg_trg_Create_Special_Wave_Units )
    call TriggerExecute( gg_trg_Order_Group_Attack )
endfunction

//===========================================================================
function InitTrig_Create_Basic_Wave_Units takes nothing returns nothing
    set gg_trg_Create_Basic_Wave_Units = CreateTrigger(  )
    call DisableTrigger( gg_trg_Create_Basic_Wave_Units )
    call TriggerRegisterTimerEventPeriodic( gg_trg_Create_Basic_Wave_Units, 10.00 )
    call TriggerAddAction( gg_trg_Create_Basic_Wave_Units, function Trig_Create_Basic_Wave_Units_Actions )
endfunction

//===========================================================================
// Trigger: Create Special Wave Units
//
// Add a special unit to the wave group based on a fixed cycle.
//===========================================================================
function Trig_Create_Special_Wave_Units_Func001Func003C takes nothing returns boolean
    if ( not ( 0 == ModuloInteger(udg_child_wave_counter, 4) ) ) then
        return false
    endif
    if ( not ( udg_child_wave_counter != 0 ) ) then
        return false
    endif
    return true
endfunction

function Trig_Create_Special_Wave_Units_Func001C takes nothing returns boolean
    if ( not Trig_Create_Special_Wave_Units_Func001Func003C() ) then
        return false
    endif
    return true
endfunction

function Trig_Create_Special_Wave_Units_Actions takes nothing returns nothing
    if ( Trig_Create_Special_Wave_Units_Func001C() ) then
        call CreateNUnitsAtLoc( 1, udg_special_enemy_type_array[udg_wave_counter], Player(12), GetRectCenter(gg_rct_Enemy_Spawn), bj_UNIT_FACING )
        call GroupAddUnitSimple( GetLastCreatedUnit(), udg_enemy_spawn_group )
    else
    endif
endfunction

//===========================================================================
function InitTrig_Create_Special_Wave_Units takes nothing returns nothing
    set gg_trg_Create_Special_Wave_Units = CreateTrigger(  )
    call TriggerAddAction( gg_trg_Create_Special_Wave_Units, function Trig_Create_Special_Wave_Units_Actions )
endfunction

//===========================================================================
// Trigger: Order Group Attack
//===========================================================================
function Trig_Order_Group_Attack_Func001A takes nothing returns nothing
    call IssuePointOrderLocBJ( GetEnumUnit(), "attack", GetRectCenter(gg_rct_Enemy_Wave_Target) )
endfunction

function Trig_Order_Group_Attack_Func002A takes nothing returns nothing
    call GroupRemoveUnitSimple( GetEnumUnit(), udg_enemy_spawn_group )
endfunction

function Trig_Order_Group_Attack_Actions takes nothing returns nothing
    call ForGroupBJ( udg_enemy_spawn_group, function Trig_Order_Group_Attack_Func001A )
    call ForGroupBJ( udg_enemy_spawn_group, function Trig_Order_Group_Attack_Func002A )
    call TriggerExecute( gg_trg_Set_child_wave_counter )
endfunction

//===========================================================================
function InitTrig_Order_Group_Attack takes nothing returns nothing
    set gg_trg_Order_Group_Attack = CreateTrigger(  )
    call TriggerAddAction( gg_trg_Order_Group_Attack, function Trig_Order_Group_Attack_Actions )
endfunction

//===========================================================================
// Trigger: Set child wave counter
//
// Ran after Order Group Attack trigger. This variable determines the current child wave sent during the current wave level. It will also determine when and what special unit will be sent with the child wave.
//===========================================================================
function Trig_Set_child_wave_counter_Func001C takes nothing returns boolean
    if ( not ( udg_child_wave_counter < 4 ) ) then
        return false
    endif
    return true
endfunction

function Trig_Set_child_wave_counter_Actions takes nothing returns nothing
    if ( Trig_Set_child_wave_counter_Func001C() ) then
        set udg_child_wave_counter = ( udg_child_wave_counter + 1 )
    else
        set udg_child_wave_counter = 0
        call DisableTrigger( gg_trg_Create_Basic_Wave_Units )
    endif
endfunction

//===========================================================================
function InitTrig_Set_child_wave_counter takes nothing returns nothing
    set gg_trg_Set_child_wave_counter = CreateTrigger(  )
    call TriggerAddAction( gg_trg_Set_child_wave_counter, function Trig_Set_child_wave_counter_Actions )
endfunction

//===========================================================================
// Trigger: Upgrade Next Wave
//
// Increase difficulty of waves on a defined interval.
// Wave counter determines what special and basic enemies will spawn.
// TODO: I could add logic to only upgrade the wave after the current wave units are dead. Then I could ping the location of any remaning enemies.
//===========================================================================
function Trig_Upgrade_Next_Wave_Actions takes nothing returns nothing
    call DisplayTextToForce( GetPlayersAll(), "TRIGSTR_030" )
    call TriggerExecute( gg_trg_Wave_Completion )
    set udg_wave_counter = ( udg_wave_counter + 1 )
endfunction

//===========================================================================
function InitTrig_Upgrade_Next_Wave takes nothing returns nothing
    set gg_trg_Upgrade_Next_Wave = CreateTrigger(  )
    call TriggerAddAction( gg_trg_Upgrade_Next_Wave, function Trig_Upgrade_Next_Wave_Actions )
endfunction

//===========================================================================
// Trigger: Wave Completion
//===========================================================================
function Trig_Wave_Completion_Actions takes nothing returns nothing
    call TriggerExecute( gg_trg_Add_Special_Unit_To_Shop )
endfunction

//===========================================================================
function InitTrig_Wave_Completion takes nothing returns nothing
    set gg_trg_Wave_Completion = CreateTrigger(  )
    call TriggerAddAction( gg_trg_Wave_Completion, function Trig_Wave_Completion_Actions )
endfunction

//===========================================================================
// Trigger: Startup
//===========================================================================
function Trig_Startup_Func004001001 takes nothing returns boolean
    return ( GetPlayerSlotState(GetFilterPlayer()) == PLAYER_SLOT_STATE_PLAYING )
endfunction

function Trig_Startup_Func004Func001C takes nothing returns boolean
    if ( not ( GetPlayerController(GetEnumPlayer()) == MAP_CONTROL_USER ) ) then
        return false
    endif
    return true
endfunction

function Trig_Startup_Func004A takes nothing returns nothing
    if ( Trig_Startup_Func004Func001C() ) then
        call ForceAddPlayerSimple( GetEnumPlayer(), udg_Players )
        call CreateNUnitsAtLoc( 1, 'h001', GetEnumPlayer(), GetRandomLocInRect(gg_rct_Player_Spawn), bj_UNIT_FACING )
        call SetPlayerStateBJ( GetEnumPlayer(), PLAYER_STATE_RESOURCE_GOLD, 125 )
        call SetPlayerStateBJ( GetEnumPlayer(), PLAYER_STATE_RESOURCE_FOOD_CAP, 8 )
        call SetPlayerStateBJ( GetEnumPlayer(), PLAYER_STATE_RESOURCE_LUMBER, 55 )
        call SetPlayerMaxHeroesAllowed( 1, GetEnumPlayer() )
        call SetPlayerTechMaxAllowedSwap( 'h00C', 1, GetEnumPlayer() )
        call SetPlayerTechMaxAllowedSwap( 'h003', 1, GetEnumPlayer() )
    else
    endif
endfunction

function Trig_Startup_Actions takes nothing returns nothing
    call SetPlayerMaxHeroesAllowed( 1, Player(0) )
    call PlayMusicBJ( gg_snd_IllidansTheme )
    call CreateFogModifierRectBJ( true, Player(PLAYER_NEUTRAL_AGGRESSIVE), FOG_OF_WAR_VISIBLE, GetPlayableMapRect() )
    call ForForce( GetPlayersMatching(Condition(function Trig_Startup_Func004001001)), function Trig_Startup_Func004A )
    call StartTimerBJ( udg_game_start_timer, false, I2R(udg_preparation_time) )
    call CreateTimerDialogBJ( udg_game_start_timer, "TRIGSTR_043" )
    set udg_game_start_timer_window = GetLastCreatedTimerDialogBJ()
endfunction

//===========================================================================
function InitTrig_Startup takes nothing returns nothing
    set gg_trg_Startup = CreateTrigger(  )
    call TriggerRegisterTimerEventSingle( gg_trg_Startup, 1.00 )
    call TriggerAddAction( gg_trg_Startup, function Trig_Startup_Actions )
endfunction

//===========================================================================
// Trigger: Wave Completion Reward
//===========================================================================
function Trig_Wave_Completion_Reward_Func002A takes nothing returns nothing
    call AdjustPlayerStateBJ( udg_wave_earned_gold_bonus, GetEnumPlayer(), PLAYER_STATE_RESOURCE_GOLD )
endfunction

function Trig_Wave_Completion_Reward_Actions takes nothing returns nothing
    call DisplayTextToForce( GetPlayersAll(), ( "|cff008000Round Completion Gold Bonus: |r" + I2S(udg_wave_earned_gold_bonus) ) )
    call ForForce( udg_Players, function Trig_Wave_Completion_Reward_Func002A )
    call TriggerExecute( gg_trg_Distribute_Welfare )
endfunction

//===========================================================================
function InitTrig_Wave_Completion_Reward takes nothing returns nothing
    set gg_trg_Wave_Completion_Reward = CreateTrigger(  )
    call TriggerAddAction( gg_trg_Wave_Completion_Reward, function Trig_Wave_Completion_Reward_Actions )
endfunction

//===========================================================================
// Trigger: Add Food
//===========================================================================
function Trig_Add_Food_Conditions takes nothing returns boolean
    if ( not ( GetItemTypeId(GetManipulatedItem()) == 'I00D' ) ) then
        return false
    endif
    return true
endfunction

function Trig_Add_Food_Actions takes nothing returns nothing
    call DisplayTextToForce( GetPlayersAll(), "TRIGSTR_179" )
    call AdjustPlayerStateBJ( 1, GetTriggerPlayer(), PLAYER_STATE_RESOURCE_FOOD_CAP )
endfunction

//===========================================================================
function InitTrig_Add_Food takes nothing returns nothing
    set gg_trg_Add_Food = CreateTrigger(  )
    call TriggerRegisterAnyUnitEventBJ( gg_trg_Add_Food, EVENT_PLAYER_UNIT_USE_ITEM )
    call TriggerAddCondition( gg_trg_Add_Food, Condition( function Trig_Add_Food_Conditions ) )
    call TriggerAddAction( gg_trg_Add_Food, function Trig_Add_Food_Actions )
endfunction

//===========================================================================
// Trigger: Gold On Kill
//===========================================================================
function Trig_Gold_On_Kill_Actions takes nothing returns nothing
    call AdjustPlayerStateBJ( 1, GetOwningPlayer(GetKillingUnitBJ()), PLAYER_STATE_RESOURCE_GOLD )
endfunction

//===========================================================================
function InitTrig_Gold_On_Kill takes nothing returns nothing
    set gg_trg_Gold_On_Kill = CreateTrigger(  )
    call TriggerRegisterAnyUnitEventBJ( gg_trg_Gold_On_Kill, EVENT_PLAYER_UNIT_DEATH )
    call TriggerAddAction( gg_trg_Gold_On_Kill, function Trig_Gold_On_Kill_Actions )
endfunction

//===========================================================================
// Trigger: Distribute Welfare
//
// Triggered at the end of every wave.
//===========================================================================
function Trig_Distribute_Welfare_Func002A takes nothing returns nothing
    call AdjustPlayerStateBJ( 30, GetEnumPlayer(), PLAYER_STATE_RESOURCE_GOLD )
    call AdjustPlayerStateBJ( 30, GetEnumPlayer(), PLAYER_STATE_RESOURCE_LUMBER )
endfunction

function Trig_Distribute_Welfare_Actions takes nothing returns nothing
    call DisplayTextToForce( GetPlayersAll(), "TRIGSTR_380" )
    call ForForce( udg_Players, function Trig_Distribute_Welfare_Func002A )
endfunction

//===========================================================================
function InitTrig_Distribute_Welfare takes nothing returns nothing
    set gg_trg_Distribute_Welfare = CreateTrigger(  )
    call TriggerAddAction( gg_trg_Distribute_Welfare, function Trig_Distribute_Welfare_Actions )
endfunction

//===========================================================================
// Trigger: Add Special Unit To Shop
//===========================================================================
function Trig_Add_Special_Unit_To_Shop_Actions takes nothing returns nothing
    call AddUnitToStockBJ( udg_special_enemy_type_array[udg_wave_counter], gg_unit_n002_0007, 1, 2 )
    call DisplayTextToForce( GetPlayersAll(), "TRIGSTR_074" )
endfunction

//===========================================================================
function InitTrig_Add_Special_Unit_To_Shop takes nothing returns nothing
    set gg_trg_Add_Special_Unit_To_Shop = CreateTrigger(  )
    call TriggerAddAction( gg_trg_Add_Special_Unit_To_Shop, function Trig_Add_Special_Unit_To_Shop_Actions )
endfunction

//===========================================================================
function InitCustomTriggers takes nothing returns nothing
    call InitTrig_Victory_Animation(  )
    call InitTrig_TODO(  )
    call InitTrig_Enable_Shrine_of_Power(  )
    call InitTrig_On_Immolation(  )
    call InitTrig_On_Salvage(  )
    call InitTrig_Set_Unit_Position(  )
    call InitTrig_On_Nightmare(  )
    call InitTrig_Swap_Nightmare(  )
    call InitTrig_On_Convert(  )
    call InitTrig_Create_Grass(  )
    call InitTrig_Charged_Blink_Event(  )
    call InitTrig_On_Rolling_Thunder_Bolt(  )
    call InitTrig_Set_Explosion_Point(  )
    call InitTrig_Start_Explosions(  )
    call InitTrig_Create_Explosion(  )
    call InitTrig_Hero_Attacked(  )
    call InitTrig_Learn_Empowered_Shot(  )
    call InitTrig_Soul_Collection(  )
    call InitTrig_Start_Intermission(  )
    call InitTrig_Data_Cleanup(  )
    call InitTrig_Define_Basic_Enemy_Types(  )
    call InitTrig_Define_Special_Enemy_Types(  )
    call InitTrig_Initialize_Enemy_Waves(  )
    call InitTrig_Create_Basic_Wave_Units(  )
    call InitTrig_Create_Special_Wave_Units(  )
    call InitTrig_Order_Group_Attack(  )
    call InitTrig_Set_child_wave_counter(  )
    call InitTrig_Upgrade_Next_Wave(  )
    call InitTrig_Wave_Completion(  )
    call InitTrig_Startup(  )
    call InitTrig_Wave_Completion_Reward(  )
    call InitTrig_Add_Food(  )
    call InitTrig_Gold_On_Kill(  )
    call InitTrig_Distribute_Welfare(  )
    call InitTrig_Add_Special_Unit_To_Shop(  )
endfunction

//***************************************************************************
//*
//*  Upgrades
//*
//***************************************************************************

function InitUpgrades_Player12 takes nothing returns nothing
    call SetPlayerTechResearched( Player(12), 'Rhde', 1 )
endfunction

function InitUpgrades takes nothing returns nothing
    call InitUpgrades_Player12(  )
endfunction

//***************************************************************************
//*
//*  Players
//*
//***************************************************************************

function InitCustomPlayerSlots takes nothing returns nothing

    // Player 0
    call SetPlayerStartLocation( Player(0), 0 )
    call ForcePlayerStartLocation( Player(0), 0 )
    call SetPlayerColor( Player(0), ConvertPlayerColor(0) )
    call SetPlayerRacePreference( Player(0), RACE_PREF_HUMAN )
    call SetPlayerRaceSelectable( Player(0), false )
    call SetPlayerController( Player(0), MAP_CONTROL_USER )

    // Player 1
    call SetPlayerStartLocation( Player(1), 1 )
    call ForcePlayerStartLocation( Player(1), 1 )
    call SetPlayerColor( Player(1), ConvertPlayerColor(1) )
    call SetPlayerRacePreference( Player(1), RACE_PREF_HUMAN )
    call SetPlayerRaceSelectable( Player(1), false )
    call SetPlayerController( Player(1), MAP_CONTROL_USER )

    // Player 2
    call SetPlayerStartLocation( Player(2), 2 )
    call ForcePlayerStartLocation( Player(2), 2 )
    call SetPlayerColor( Player(2), ConvertPlayerColor(2) )
    call SetPlayerRacePreference( Player(2), RACE_PREF_HUMAN )
    call SetPlayerRaceSelectable( Player(2), false )
    call SetPlayerController( Player(2), MAP_CONTROL_USER )

    // Player 3
    call SetPlayerStartLocation( Player(3), 3 )
    call ForcePlayerStartLocation( Player(3), 3 )
    call SetPlayerColor( Player(3), ConvertPlayerColor(3) )
    call SetPlayerRacePreference( Player(3), RACE_PREF_HUMAN )
    call SetPlayerRaceSelectable( Player(3), false )
    call SetPlayerController( Player(3), MAP_CONTROL_USER )

    // Player 4
    call SetPlayerStartLocation( Player(4), 4 )
    call ForcePlayerStartLocation( Player(4), 4 )
    call SetPlayerColor( Player(4), ConvertPlayerColor(4) )
    call SetPlayerRacePreference( Player(4), RACE_PREF_HUMAN )
    call SetPlayerRaceSelectable( Player(4), false )
    call SetPlayerController( Player(4), MAP_CONTROL_USER )

    // Player 5
    call SetPlayerStartLocation( Player(5), 5 )
    call ForcePlayerStartLocation( Player(5), 5 )
    call SetPlayerColor( Player(5), ConvertPlayerColor(5) )
    call SetPlayerRacePreference( Player(5), RACE_PREF_HUMAN )
    call SetPlayerRaceSelectable( Player(5), false )
    call SetPlayerController( Player(5), MAP_CONTROL_USER )

    // Player 6
    call SetPlayerStartLocation( Player(6), 6 )
    call ForcePlayerStartLocation( Player(6), 6 )
    call SetPlayerColor( Player(6), ConvertPlayerColor(6) )
    call SetPlayerRacePreference( Player(6), RACE_PREF_HUMAN )
    call SetPlayerRaceSelectable( Player(6), false )
    call SetPlayerController( Player(6), MAP_CONTROL_USER )

    // Player 7
    call SetPlayerStartLocation( Player(7), 7 )
    call ForcePlayerStartLocation( Player(7), 7 )
    call SetPlayerColor( Player(7), ConvertPlayerColor(7) )
    call SetPlayerRacePreference( Player(7), RACE_PREF_HUMAN )
    call SetPlayerRaceSelectable( Player(7), false )
    call SetPlayerController( Player(7), MAP_CONTROL_USER )

    // Player 12
    call SetPlayerStartLocation( Player(12), 8 )
    call ForcePlayerStartLocation( Player(12), 8 )
    call SetPlayerColor( Player(12), ConvertPlayerColor(12) )
    call SetPlayerRacePreference( Player(12), RACE_PREF_HUMAN )
    call SetPlayerRaceSelectable( Player(12), false )
    call SetPlayerController( Player(12), MAP_CONTROL_COMPUTER )

endfunction

function InitCustomTeams takes nothing returns nothing
    // Force: TRIGSTR_116
    call SetPlayerTeam( Player(0), 0 )
    call SetPlayerState( Player(0), PLAYER_STATE_ALLIED_VICTORY, 1 )
    call SetPlayerTeam( Player(1), 0 )
    call SetPlayerState( Player(1), PLAYER_STATE_ALLIED_VICTORY, 1 )
    call SetPlayerTeam( Player(2), 0 )
    call SetPlayerState( Player(2), PLAYER_STATE_ALLIED_VICTORY, 1 )
    call SetPlayerTeam( Player(3), 0 )
    call SetPlayerState( Player(3), PLAYER_STATE_ALLIED_VICTORY, 1 )
    call SetPlayerTeam( Player(4), 0 )
    call SetPlayerState( Player(4), PLAYER_STATE_ALLIED_VICTORY, 1 )
    call SetPlayerTeam( Player(5), 0 )
    call SetPlayerState( Player(5), PLAYER_STATE_ALLIED_VICTORY, 1 )
    call SetPlayerTeam( Player(6), 0 )
    call SetPlayerState( Player(6), PLAYER_STATE_ALLIED_VICTORY, 1 )
    call SetPlayerTeam( Player(7), 0 )
    call SetPlayerState( Player(7), PLAYER_STATE_ALLIED_VICTORY, 1 )

    //   Allied
    call SetPlayerAllianceStateAllyBJ( Player(0), Player(1), true )
    call SetPlayerAllianceStateAllyBJ( Player(0), Player(2), true )
    call SetPlayerAllianceStateAllyBJ( Player(0), Player(3), true )
    call SetPlayerAllianceStateAllyBJ( Player(0), Player(4), true )
    call SetPlayerAllianceStateAllyBJ( Player(0), Player(5), true )
    call SetPlayerAllianceStateAllyBJ( Player(0), Player(6), true )
    call SetPlayerAllianceStateAllyBJ( Player(0), Player(7), true )
    call SetPlayerAllianceStateAllyBJ( Player(1), Player(0), true )
    call SetPlayerAllianceStateAllyBJ( Player(1), Player(2), true )
    call SetPlayerAllianceStateAllyBJ( Player(1), Player(3), true )
    call SetPlayerAllianceStateAllyBJ( Player(1), Player(4), true )
    call SetPlayerAllianceStateAllyBJ( Player(1), Player(5), true )
    call SetPlayerAllianceStateAllyBJ( Player(1), Player(6), true )
    call SetPlayerAllianceStateAllyBJ( Player(1), Player(7), true )
    call SetPlayerAllianceStateAllyBJ( Player(2), Player(0), true )
    call SetPlayerAllianceStateAllyBJ( Player(2), Player(1), true )
    call SetPlayerAllianceStateAllyBJ( Player(2), Player(3), true )
    call SetPlayerAllianceStateAllyBJ( Player(2), Player(4), true )
    call SetPlayerAllianceStateAllyBJ( Player(2), Player(5), true )
    call SetPlayerAllianceStateAllyBJ( Player(2), Player(6), true )
    call SetPlayerAllianceStateAllyBJ( Player(2), Player(7), true )
    call SetPlayerAllianceStateAllyBJ( Player(3), Player(0), true )
    call SetPlayerAllianceStateAllyBJ( Player(3), Player(1), true )
    call SetPlayerAllianceStateAllyBJ( Player(3), Player(2), true )
    call SetPlayerAllianceStateAllyBJ( Player(3), Player(4), true )
    call SetPlayerAllianceStateAllyBJ( Player(3), Player(5), true )
    call SetPlayerAllianceStateAllyBJ( Player(3), Player(6), true )
    call SetPlayerAllianceStateAllyBJ( Player(3), Player(7), true )
    call SetPlayerAllianceStateAllyBJ( Player(4), Player(0), true )
    call SetPlayerAllianceStateAllyBJ( Player(4), Player(1), true )
    call SetPlayerAllianceStateAllyBJ( Player(4), Player(2), true )
    call SetPlayerAllianceStateAllyBJ( Player(4), Player(3), true )
    call SetPlayerAllianceStateAllyBJ( Player(4), Player(5), true )
    call SetPlayerAllianceStateAllyBJ( Player(4), Player(6), true )
    call SetPlayerAllianceStateAllyBJ( Player(4), Player(7), true )
    call SetPlayerAllianceStateAllyBJ( Player(5), Player(0), true )
    call SetPlayerAllianceStateAllyBJ( Player(5), Player(1), true )
    call SetPlayerAllianceStateAllyBJ( Player(5), Player(2), true )
    call SetPlayerAllianceStateAllyBJ( Player(5), Player(3), true )
    call SetPlayerAllianceStateAllyBJ( Player(5), Player(4), true )
    call SetPlayerAllianceStateAllyBJ( Player(5), Player(6), true )
    call SetPlayerAllianceStateAllyBJ( Player(5), Player(7), true )
    call SetPlayerAllianceStateAllyBJ( Player(6), Player(0), true )
    call SetPlayerAllianceStateAllyBJ( Player(6), Player(1), true )
    call SetPlayerAllianceStateAllyBJ( Player(6), Player(2), true )
    call SetPlayerAllianceStateAllyBJ( Player(6), Player(3), true )
    call SetPlayerAllianceStateAllyBJ( Player(6), Player(4), true )
    call SetPlayerAllianceStateAllyBJ( Player(6), Player(5), true )
    call SetPlayerAllianceStateAllyBJ( Player(6), Player(7), true )
    call SetPlayerAllianceStateAllyBJ( Player(7), Player(0), true )
    call SetPlayerAllianceStateAllyBJ( Player(7), Player(1), true )
    call SetPlayerAllianceStateAllyBJ( Player(7), Player(2), true )
    call SetPlayerAllianceStateAllyBJ( Player(7), Player(3), true )
    call SetPlayerAllianceStateAllyBJ( Player(7), Player(4), true )
    call SetPlayerAllianceStateAllyBJ( Player(7), Player(5), true )
    call SetPlayerAllianceStateAllyBJ( Player(7), Player(6), true )

    //   Shared Vision
    call SetPlayerAllianceStateVisionBJ( Player(0), Player(1), true )
    call SetPlayerAllianceStateVisionBJ( Player(0), Player(2), true )
    call SetPlayerAllianceStateVisionBJ( Player(0), Player(3), true )
    call SetPlayerAllianceStateVisionBJ( Player(0), Player(4), true )
    call SetPlayerAllianceStateVisionBJ( Player(0), Player(5), true )
    call SetPlayerAllianceStateVisionBJ( Player(0), Player(6), true )
    call SetPlayerAllianceStateVisionBJ( Player(0), Player(7), true )
    call SetPlayerAllianceStateVisionBJ( Player(1), Player(0), true )
    call SetPlayerAllianceStateVisionBJ( Player(1), Player(2), true )
    call SetPlayerAllianceStateVisionBJ( Player(1), Player(3), true )
    call SetPlayerAllianceStateVisionBJ( Player(1), Player(4), true )
    call SetPlayerAllianceStateVisionBJ( Player(1), Player(5), true )
    call SetPlayerAllianceStateVisionBJ( Player(1), Player(6), true )
    call SetPlayerAllianceStateVisionBJ( Player(1), Player(7), true )
    call SetPlayerAllianceStateVisionBJ( Player(2), Player(0), true )
    call SetPlayerAllianceStateVisionBJ( Player(2), Player(1), true )
    call SetPlayerAllianceStateVisionBJ( Player(2), Player(3), true )
    call SetPlayerAllianceStateVisionBJ( Player(2), Player(4), true )
    call SetPlayerAllianceStateVisionBJ( Player(2), Player(5), true )
    call SetPlayerAllianceStateVisionBJ( Player(2), Player(6), true )
    call SetPlayerAllianceStateVisionBJ( Player(2), Player(7), true )
    call SetPlayerAllianceStateVisionBJ( Player(3), Player(0), true )
    call SetPlayerAllianceStateVisionBJ( Player(3), Player(1), true )
    call SetPlayerAllianceStateVisionBJ( Player(3), Player(2), true )
    call SetPlayerAllianceStateVisionBJ( Player(3), Player(4), true )
    call SetPlayerAllianceStateVisionBJ( Player(3), Player(5), true )
    call SetPlayerAllianceStateVisionBJ( Player(3), Player(6), true )
    call SetPlayerAllianceStateVisionBJ( Player(3), Player(7), true )
    call SetPlayerAllianceStateVisionBJ( Player(4), Player(0), true )
    call SetPlayerAllianceStateVisionBJ( Player(4), Player(1), true )
    call SetPlayerAllianceStateVisionBJ( Player(4), Player(2), true )
    call SetPlayerAllianceStateVisionBJ( Player(4), Player(3), true )
    call SetPlayerAllianceStateVisionBJ( Player(4), Player(5), true )
    call SetPlayerAllianceStateVisionBJ( Player(4), Player(6), true )
    call SetPlayerAllianceStateVisionBJ( Player(4), Player(7), true )
    call SetPlayerAllianceStateVisionBJ( Player(5), Player(0), true )
    call SetPlayerAllianceStateVisionBJ( Player(5), Player(1), true )
    call SetPlayerAllianceStateVisionBJ( Player(5), Player(2), true )
    call SetPlayerAllianceStateVisionBJ( Player(5), Player(3), true )
    call SetPlayerAllianceStateVisionBJ( Player(5), Player(4), true )
    call SetPlayerAllianceStateVisionBJ( Player(5), Player(6), true )
    call SetPlayerAllianceStateVisionBJ( Player(5), Player(7), true )
    call SetPlayerAllianceStateVisionBJ( Player(6), Player(0), true )
    call SetPlayerAllianceStateVisionBJ( Player(6), Player(1), true )
    call SetPlayerAllianceStateVisionBJ( Player(6), Player(2), true )
    call SetPlayerAllianceStateVisionBJ( Player(6), Player(3), true )
    call SetPlayerAllianceStateVisionBJ( Player(6), Player(4), true )
    call SetPlayerAllianceStateVisionBJ( Player(6), Player(5), true )
    call SetPlayerAllianceStateVisionBJ( Player(6), Player(7), true )
    call SetPlayerAllianceStateVisionBJ( Player(7), Player(0), true )
    call SetPlayerAllianceStateVisionBJ( Player(7), Player(1), true )
    call SetPlayerAllianceStateVisionBJ( Player(7), Player(2), true )
    call SetPlayerAllianceStateVisionBJ( Player(7), Player(3), true )
    call SetPlayerAllianceStateVisionBJ( Player(7), Player(4), true )
    call SetPlayerAllianceStateVisionBJ( Player(7), Player(5), true )
    call SetPlayerAllianceStateVisionBJ( Player(7), Player(6), true )

    // Force: TRIGSTR_117
    call SetPlayerTeam( Player(12), 1 )
    call SetPlayerState( Player(12), PLAYER_STATE_ALLIED_VICTORY, 1 )

endfunction

function InitAllyPriorities takes nothing returns nothing

    call SetStartLocPrioCount( 0, 7 )
    call SetStartLocPrio( 0, 0, 1, MAP_LOC_PRIO_HIGH )
    call SetStartLocPrio( 0, 1, 2, MAP_LOC_PRIO_HIGH )
    call SetStartLocPrio( 0, 2, 3, MAP_LOC_PRIO_HIGH )
    call SetStartLocPrio( 0, 3, 4, MAP_LOC_PRIO_HIGH )
    call SetStartLocPrio( 0, 4, 5, MAP_LOC_PRIO_HIGH )
    call SetStartLocPrio( 0, 5, 6, MAP_LOC_PRIO_HIGH )
    call SetStartLocPrio( 0, 6, 7, MAP_LOC_PRIO_HIGH )

    call SetStartLocPrioCount( 1, 6 )
    call SetStartLocPrio( 1, 0, 2, MAP_LOC_PRIO_HIGH )
    call SetStartLocPrio( 1, 1, 3, MAP_LOC_PRIO_HIGH )
    call SetStartLocPrio( 1, 2, 4, MAP_LOC_PRIO_HIGH )
    call SetStartLocPrio( 1, 3, 5, MAP_LOC_PRIO_HIGH )
    call SetStartLocPrio( 1, 4, 6, MAP_LOC_PRIO_HIGH )
    call SetStartLocPrio( 1, 5, 7, MAP_LOC_PRIO_HIGH )

    call SetStartLocPrioCount( 2, 6 )
    call SetStartLocPrio( 2, 0, 1, MAP_LOC_PRIO_HIGH )
    call SetStartLocPrio( 2, 1, 3, MAP_LOC_PRIO_HIGH )
    call SetStartLocPrio( 2, 2, 4, MAP_LOC_PRIO_HIGH )
    call SetStartLocPrio( 2, 3, 5, MAP_LOC_PRIO_HIGH )
    call SetStartLocPrio( 2, 4, 6, MAP_LOC_PRIO_HIGH )
    call SetStartLocPrio( 2, 5, 7, MAP_LOC_PRIO_HIGH )

    call SetStartLocPrioCount( 3, 6 )
    call SetStartLocPrio( 3, 0, 1, MAP_LOC_PRIO_HIGH )
    call SetStartLocPrio( 3, 1, 2, MAP_LOC_PRIO_HIGH )
    call SetStartLocPrio( 3, 2, 4, MAP_LOC_PRIO_HIGH )
    call SetStartLocPrio( 3, 3, 5, MAP_LOC_PRIO_HIGH )
    call SetStartLocPrio( 3, 4, 6, MAP_LOC_PRIO_HIGH )
    call SetStartLocPrio( 3, 5, 7, MAP_LOC_PRIO_HIGH )

    call SetStartLocPrioCount( 4, 6 )
    call SetStartLocPrio( 4, 0, 1, MAP_LOC_PRIO_HIGH )
    call SetStartLocPrio( 4, 1, 2, MAP_LOC_PRIO_HIGH )
    call SetStartLocPrio( 4, 2, 3, MAP_LOC_PRIO_HIGH )
    call SetStartLocPrio( 4, 3, 5, MAP_LOC_PRIO_HIGH )
    call SetStartLocPrio( 4, 4, 6, MAP_LOC_PRIO_HIGH )
    call SetStartLocPrio( 4, 5, 7, MAP_LOC_PRIO_HIGH )

    call SetStartLocPrioCount( 5, 6 )
    call SetStartLocPrio( 5, 0, 1, MAP_LOC_PRIO_HIGH )
    call SetStartLocPrio( 5, 1, 2, MAP_LOC_PRIO_HIGH )
    call SetStartLocPrio( 5, 2, 3, MAP_LOC_PRIO_HIGH )
    call SetStartLocPrio( 5, 3, 4, MAP_LOC_PRIO_HIGH )
    call SetStartLocPrio( 5, 4, 6, MAP_LOC_PRIO_HIGH )
    call SetStartLocPrio( 5, 5, 7, MAP_LOC_PRIO_HIGH )

    call SetStartLocPrioCount( 6, 6 )
    call SetStartLocPrio( 6, 0, 1, MAP_LOC_PRIO_HIGH )
    call SetStartLocPrio( 6, 1, 2, MAP_LOC_PRIO_HIGH )
    call SetStartLocPrio( 6, 2, 3, MAP_LOC_PRIO_HIGH )
    call SetStartLocPrio( 6, 3, 4, MAP_LOC_PRIO_HIGH )
    call SetStartLocPrio( 6, 4, 5, MAP_LOC_PRIO_HIGH )
    call SetStartLocPrio( 6, 5, 7, MAP_LOC_PRIO_HIGH )

    call SetStartLocPrioCount( 7, 6 )
    call SetStartLocPrio( 7, 0, 1, MAP_LOC_PRIO_HIGH )
    call SetStartLocPrio( 7, 1, 2, MAP_LOC_PRIO_HIGH )
    call SetStartLocPrio( 7, 2, 3, MAP_LOC_PRIO_HIGH )
    call SetStartLocPrio( 7, 3, 4, MAP_LOC_PRIO_HIGH )
    call SetStartLocPrio( 7, 4, 5, MAP_LOC_PRIO_HIGH )
    call SetStartLocPrio( 7, 5, 6, MAP_LOC_PRIO_HIGH )

    call SetStartLocPrioCount( 8, 5 )
    call SetStartLocPrio( 8, 0, 1, MAP_LOC_PRIO_LOW )
    call SetStartLocPrio( 8, 1, 2, MAP_LOC_PRIO_LOW )
    call SetStartLocPrio( 8, 2, 3, MAP_LOC_PRIO_LOW )
    call SetStartLocPrio( 8, 3, 4, MAP_LOC_PRIO_LOW )
    call SetStartLocPrio( 8, 4, 5, MAP_LOC_PRIO_LOW )
endfunction

//***************************************************************************
//*
//*  Main Initialization
//*
//***************************************************************************

//===========================================================================
function main takes nothing returns nothing
    call SetCameraBounds( -7424.0 + GetCameraMargin(CAMERA_MARGIN_LEFT), -7680.0 + GetCameraMargin(CAMERA_MARGIN_BOTTOM), 7424.0 - GetCameraMargin(CAMERA_MARGIN_RIGHT), 7168.0 - GetCameraMargin(CAMERA_MARGIN_TOP), -7424.0 + GetCameraMargin(CAMERA_MARGIN_LEFT), 7168.0 - GetCameraMargin(CAMERA_MARGIN_TOP), 7424.0 - GetCameraMargin(CAMERA_MARGIN_RIGHT), -7680.0 + GetCameraMargin(CAMERA_MARGIN_BOTTOM) )
    call SetDayNightModels( "Environment\\DNC\\DNCAshenvale\\DNCAshenvaleTerrain\\DNCAshenvaleTerrain.mdl", "Environment\\DNC\\DNCAshenvale\\DNCAshenvaleUnit\\DNCAshenvaleUnit.mdl" )
    call NewSoundEnvironment( "Default" )
    call SetAmbientDaySound( "AshenvaleDay" )
    call SetAmbientNightSound( "AshenvaleNight" )
    call SetMapMusic( "Music", true, 0 )
    call InitSounds(  )
    call CreateRegions(  )
    call InitUpgrades(  )
    call CreateAllItems(  )
    call CreateAllUnits(  )
    call InitBlizzard(  )
    call InitGlobals(  )
    call InitCustomTriggers(  )

endfunction

//***************************************************************************
//*
//*  Map Configuration
//*
//***************************************************************************

function config takes nothing returns nothing
    call SetMapName( "TRIGSTR_010" )
    call SetMapDescription( "TRIGSTR_012" )
    call SetPlayers( 9 )
    call SetTeams( 9 )
    call SetGamePlacement( MAP_PLACEMENT_TEAMS_TOGETHER )

    call DefineStartLocation( 0, -128.0, 128.0 )
    call DefineStartLocation( 1, -128.0, 64.0 )
    call DefineStartLocation( 2, -128.0, 64.0 )
    call DefineStartLocation( 3, -128.0, 64.0 )
    call DefineStartLocation( 4, -128.0, 64.0 )
    call DefineStartLocation( 5, -128.0, 64.0 )
    call DefineStartLocation( 6, -128.0, 64.0 )
    call DefineStartLocation( 7, -128.0, 64.0 )
    call DefineStartLocation( 8, -4672.0, -64.0 )

    // Player setup
    call InitCustomPlayerSlots(  )
    call InitCustomTeams(  )
    call InitAllyPriorities(  )
endfunction

